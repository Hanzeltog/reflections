In the first lessons I have learned to use the FC command to compare two files using command prompt. I have chosen the 'Git' folder in the dropbox/Ordina folder as  a folder for these courses.
This helped me to find a bug in a file a lot easier than it would when scrolling through the whole text.
Having easy access to the entire history of a file would make me a more efficient programmer in the long term because I wouldn't have to search back in all my files to find a previous piece of code. 

What do you think are the pros and cons of manually choosing 	when to create a commit, like you do in Git, vs having version automatically saved, like Google Docs does?
I think the biggest pro is that you can commit changes with every logical change so that it stays clear what you changed in each version. That way it's much easier to recall where an error might be. 

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
It probably has something to do with what it was designed for. As Git is designed for software development, it makes sense to commit multiple files at once that have a relation to one another.

How can you use the commands git log and git diff to view the history of files?
You can use git log to get the different versions of the files. Once you have those, you can compare on version to another using the git diff control and the versions-id's of the different versions.

How might using version control make you more confident to make changes that could break something?
Because there is always a way back to before you broke it

Now that you have your workspace set up, what do you want to try using Git for?
For extended version control for software development.

